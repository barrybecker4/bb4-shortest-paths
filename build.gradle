buildscript {
    repositories {
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/"}
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
    dependencies {
        classpath 'com.barrybecker4:bb4-gradle:1.8-SNAPSHOT'
    }
}

plugins {
    id "com.github.maiflai.scalatest" version "0.32" // needed to run scala tests
}

description = 'Implementations for shortest path algorithms'
group = 'com.barrybecker4'
version = '1.8-SNAPSHOT'
ext {
    archivesBaseName = 'bb4-project-template'
    mainClass = "com.barrybecker4.discreteoptimization.shortestpaths.viewer.GraphViewerApp"
}

apply from: project.buildscript.classLoader.getResource('bb4.gradle').toURI()

dependencies {
    implementation 'com.barrybecker4:bb4-common:1.8-SNAPSHOT'
    implementation 'org.scala-lang.modules:scala-parallel-collections_3:1.0.4'
    implementation 'com.barrybecker4:bb4-math:1.8-SNAPSHOT'
    implementation 'com.barrybecker4:bb4-optimization:1.8-SNAPSHOT'
    implementation 'com.google.ortools:ortools-java:9.7.2996'
    // for graph visualization
    implementation 'org.graphstream:gs-core:2.0'
    implementation 'org.graphstream:gs-ui-swing:2.0'
}


for (problemName in ['Knapsack', 'SetCover', 'Tsp', 'Facility', 'VehicleRouting', 'KShortestPaths']) {
    println(problemName)
    tasks.register('run' + problemName, JavaExec) {
        dependsOn classes
        group = 'application'
        description = 'Runs the ' + problemName + 'App'
        mainClassName = 'com.barrybecker4.discreteoptimization.' + problemName + 'App'
        classpath = sourceSets.main.runtimeClasspath
    }
}


// This allows publishing of this project library to Sonatype
apply from: project.buildscript.classLoader.getResource('bb4-publish.gradle').toURI()

